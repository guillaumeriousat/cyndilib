name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: "Skip cibuildwheel tests"
        required: true
        type: boolean
      os_type:
        description: "OS"
        default: "all"
        type: choice
        options:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        - all
      allow_deploy:
        description: "Deploy to PyPI"
        required: true
        type: boolean


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}_${{ matrix.python-version }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          arch: auto
          python-version: "cp3{7,8,9,10}"
        - os: ubuntu-latest
          arch: x86_64
          python-version: "cp3{7,8,9,10}"
        - os: windows-latest
          arch: AMD64
          python-version: "cp3{7,8,9,10}"
        - os: ubuntu-latest
          arch: aarch64
          python-version: "cp37"
        - os: ubuntu-latest
          arch: aarch64
          python-version: "cp38"
        - os: ubuntu-latest
          arch: aarch64
          python-version: "cp39"
        - os: ubuntu-latest
          arch: aarch64
          python-version: "cp310"
        - os: ubuntu-latest
          arch: i686
          python-version: "cp37"
        - os: ubuntu-latest
          arch: i686
          python-version: "cp38"
        - os: ubuntu-latest
          arch: i686
          python-version: "cp39"
        - os: ubuntu-latest
          arch: i686
          python-version: "cp310"

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v2

      - name: Set cibuildwheel env
        id: cibuildwheel_env
        run: |
          CIBW_TEST_SKIP="cp37-*"
          if [ "${{ inputs.skip_tests }}" == "true" ]; then
            echo "skip_tests is true"
            CIBW_TEST_SKIP="*"
          fi
          echo "test_skip=$CIBW_TEST_SKIP" >> $GITHUB_OUTPUT
        shell: bash

      - name: Debug env step
        run: |
          echo "test_skip = ${{ steps.cibuildwheel_env.outputs.test_skip }}"
          echo "skip_build = ${{ steps.cibuildwheel_env.outputs.skip_build }}"
        shell: bash

      - name: Build wheels
        id: build_wheel
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: ${{ matrix.python-version }}-*
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_SKIP: ${{ steps.cibuildwheel_env.outputs.test_skip }}
        if: ${{ inputs.os_type }} != "" && (${{ inputs.os_type }} == matrix.os || ${{ inputs.os_type }} == "all")
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        if: ${{ steps.build_wheel.outcome }} == "success"
        with:
          path: ./wheelhouse/*.whl

  deploy:
      name: 'Deploy to PyPI'
      needs: [build_wheels]
      runs-on: ubuntu-latest
      if: ${{ success() && inputs.allow_deploy == 'true' }}
      steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
